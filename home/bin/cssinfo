#!/usr/bin/env python

"""
Display information about the tags, classes and ids in a document.
"""

from sets import Set
from optparse import OptionParser
from HTMLParser import HTMLParser

class CSSInfo(HTMLParser):

    def reset(self):
        HTMLParser.reset(self)
        self.tags = Set()
        self.classes = Set()
        self.ids = Set()
        
    def handle_starttag(self, tag, attrs):
        self.tags.add(tag)
        for (attr, value) in attrs:
            if attr == 'class':
                for klass in value.split(' '):
                    self.classes.add((tag, klass))
            elif attr == 'id':
                self.ids.add((tag, value))
        
if __name__ == '__main__':

    usage = "usage: %prog [options] (file | url)"
    parser = OptionParser()
    parser.add_option('-t', '--tags', 
                      dest    = 'show_tags', 
                      action  = 'store_true',
                      default = False,
                      help    = 'Show all tags (even those without classes/ids'
    )
    parser.add_option('-s', '--short',
                      dest    = 'show_short',
                      action  = 'store_true',
                      default = False,
                      help    = 'Show short classes/ids ("#id" and ".class" '
                                'instead of "tag#id" and "tag.class"'
    )
    parser.add_option('--hide-classes',
                      dest    = 'show_classes',
                      action  = 'store_false',
                      default = True,
                      help    = "Don't show classes"
    )
    parser.add_option('--hide-ids',
                      dest    = 'show_ids',
                      action  = 'store_false',
                      default = True,
                      help    = "Don't show ids"
    )
                      
    (options, args) = parser.parse_args()
    if len(args) != 1:
        parser.error("Incorrect number of arguments")
        
    file = args[0]
    if "://" in file:
        import urllib
        fp = urllib.urlopen(file)
    else:
        fp = open(file)
                      
    info = CSSInfo()
    info.feed(fp.read())
    info.close()
    
    print "/*** Generated CSS for %s ***/" % file
    print
    if options.show_tags:
        print "/*** Tags ***/"
        print
        tags = list(info.tags)
        tags.sort()
        for tag in tags:
            print tag
        print
        
    if options.show_ids:
        print "/*** IDs ***/"
        print
        if (options.show_short):
            ids = ["#%s" % id for (tag, id) in info.ids]
        else:
            ids = ["%s#%s" % (tag, id) for (tag, id) in info.ids]
        ids.sort()
        for id in ids:
            print id
        print
            
    if options.show_classes:
        print "/*** Classes ***/"
        print
        if (options.show_short):
            classes = [".%s" % klass for (tag, klass) in info.classes]
        else:
            classes = ["%s.%s" % (tag, klass) for (tag, klass) in info.classes]
        classes.sort()
        for klass in classes:
            print klass
        print
